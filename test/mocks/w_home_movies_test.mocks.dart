// Mocks generated by Mockito 5.4.4 from annotations
// in dima_project/test/widget/pages/movies/home_movies_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:io' as _i13;

import 'package:dima_project/models/movie.dart' as _i2;
import 'package:dima_project/models/movie_review.dart' as _i14;
import 'package:dima_project/models/person.dart' as _i3;
import 'package:dima_project/models/user.dart' as _i12;
import 'package:dima_project/services/custom_auth.dart' as _i15;
import 'package:dima_project/services/notifications_service.dart' as _i16;
import 'package:dima_project/services/tmdb_api_service.dart' as _i7;
import 'package:dima_project/services/user_service.dart' as _i11;
import 'package:firebase_auth/firebase_auth.dart' as _i6;
import 'package:firebase_core/firebase_core.dart' as _i5;
import 'package:http/http.dart' as _i9;
import 'package:logger/logger.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMovie_0 extends _i1.SmartFake implements _i2.Movie {
  _FakeMovie_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePerson_1 extends _i1.SmartFake implements _i3.Person {
  _FakePerson_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLogger_2 extends _i1.SmartFake implements _i4.Logger {
  _FakeLogger_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseApp_3 extends _i1.SmartFake implements _i5.FirebaseApp {
  _FakeFirebaseApp_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeActionCodeInfo_4 extends _i1.SmartFake
    implements _i6.ActionCodeInfo {
  _FakeActionCodeInfo_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserCredential_5 extends _i1.SmartFake
    implements _i6.UserCredential {
  _FakeUserCredential_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfirmationResult_6 extends _i1.SmartFake
    implements _i6.ConfirmationResult {
  _FakeConfirmationResult_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TmdbApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTmdbApiService extends _i1.Mock implements _i7.TmdbApiService {
  MockTmdbApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<List<_i2.Movie>> fetchTrendingMovies([_i9.Client? client]) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchTrendingMovies,
          [client],
        ),
        returnValue: _i8.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
      ) as _i8.Future<List<_i2.Movie>>);

  @override
  _i8.Future<List<_i2.Movie>> fetchNowPlayingMovies() => (super.noSuchMethod(
        Invocation.method(
          #fetchNowPlayingMovies,
          [],
        ),
        returnValue: _i8.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
      ) as _i8.Future<List<_i2.Movie>>);

  @override
  _i8.Future<List<_i2.Movie>> fetchTopRatedMovies() => (super.noSuchMethod(
        Invocation.method(
          #fetchTopRatedMovies,
          [],
        ),
        returnValue: _i8.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
      ) as _i8.Future<List<_i2.Movie>>);

  @override
  _i8.Future<List<_i2.Movie>> fetchUpcomingMovies() => (super.noSuchMethod(
        Invocation.method(
          #fetchUpcomingMovies,
          [],
        ),
        returnValue: _i8.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
      ) as _i8.Future<List<_i2.Movie>>);

  @override
  _i8.Future<_i2.Movie> retrieveFilmInfo(int? movieId) => (super.noSuchMethod(
        Invocation.method(
          #retrieveFilmInfo,
          [movieId],
        ),
        returnValue: _i8.Future<_i2.Movie>.value(_FakeMovie_0(
          this,
          Invocation.method(
            #retrieveFilmInfo,
            [movieId],
          ),
        )),
      ) as _i8.Future<_i2.Movie>);

  @override
  _i8.Future<List<Map<String, dynamic>>> retrieveCast(int? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveCast,
          [movieId],
        ),
        returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i8.Future<List<Map<String, dynamic>>>);

  @override
  _i8.Future<String> retrieveTrailer(int? movieId) => (super.noSuchMethod(
        Invocation.method(
          #retrieveTrailer,
          [movieId],
        ),
        returnValue: _i8.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #retrieveTrailer,
            [movieId],
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<List<_i2.Movie>> searchMovie(String? query) => (super.noSuchMethod(
        Invocation.method(
          #searchMovie,
          [query],
        ),
        returnValue: _i8.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
      ) as _i8.Future<List<_i2.Movie>>);

  @override
  _i8.Future<List<_i2.Movie>> fetchMoviesByReleaseDate(String? releaseDate) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMoviesByReleaseDate,
          [releaseDate],
        ),
        returnValue: _i8.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
      ) as _i8.Future<List<_i2.Movie>>);

  @override
  _i8.Future<Map<String, List<Map<String, dynamic>>>> fetchAllProviders(
          int? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAllProviders,
          [movieId],
        ),
        returnValue: _i8.Future<Map<String, List<Map<String, dynamic>>>>.value(
            <String, List<Map<String, dynamic>>>{}),
      ) as _i8.Future<Map<String, List<Map<String, dynamic>>>>);

  @override
  _i8.Future<List<_i2.Movie>> fetchMoviesByGenres(List<int>? genreIds) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMoviesByGenres,
          [genreIds],
        ),
        returnValue: _i8.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
      ) as _i8.Future<List<_i2.Movie>>);

  @override
  _i8.Future<List<_i2.Movie>> fetchRecommendedMovies(int? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchRecommendedMovies,
          [movieId],
        ),
        returnValue: _i8.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
      ) as _i8.Future<List<_i2.Movie>>);

  @override
  _i8.Future<List<_i3.Person>> searchPeople(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchPeople,
          [query],
        ),
        returnValue: _i8.Future<List<_i3.Person>>.value(<_i3.Person>[]),
      ) as _i8.Future<List<_i3.Person>>);

  @override
  _i8.Future<_i3.Person> fetchPersonDetails(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPersonDetails,
          [personId],
        ),
        returnValue: _i8.Future<_i3.Person>.value(_FakePerson_1(
          this,
          Invocation.method(
            #fetchPersonDetails,
            [personId],
          ),
        )),
      ) as _i8.Future<_i3.Person>);

  @override
  _i8.Future<List<_i2.Movie>> fetchPersonMovies(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPersonMovies,
          [personId],
        ),
        returnValue: _i8.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
      ) as _i8.Future<List<_i2.Movie>>);
}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i11.UserService {
  MockUserService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Logger get logger => (super.noSuchMethod(
        Invocation.getter(#logger),
        returnValue: _FakeLogger_2(
          this,
          Invocation.getter(#logger),
        ),
      ) as _i4.Logger);

  @override
  _i8.Future<void> createUser(_i12.MyUser? user) => (super.noSuchMethod(
        Invocation.method(
          #createUser,
          [user],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i12.MyUser?> getUser(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [userId],
        ),
        returnValue: _i8.Future<_i12.MyUser?>.value(),
      ) as _i8.Future<_i12.MyUser?>);

  @override
  _i8.Future<void> updateUser(_i12.MyUser? user) => (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [user],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteUser(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [userId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> followUser(
    String? currentUserId,
    String? userToFollowId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #followUser,
          [
            currentUserId,
            userToFollowId,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> unfollowUser(
    String? currentUserId,
    String? userToUnfollowId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #unfollowUser,
          [
            currentUserId,
            userToUnfollowId,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> removeFollower(
    String? currentUserId,
    String? followerToRemoveId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFollower,
          [
            currentUserId,
            followerToRemoveId,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i12.MyUser>> getFollowers(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFollowers,
          [userId],
        ),
        returnValue: _i8.Future<List<_i12.MyUser>>.value(<_i12.MyUser>[]),
      ) as _i8.Future<List<_i12.MyUser>>);

  @override
  _i8.Future<List<_i12.MyUser>> getFollowing(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFollowing,
          [userId],
        ),
        returnValue: _i8.Future<List<_i12.MyUser>>.value(<_i12.MyUser>[]),
      ) as _i8.Future<List<_i12.MyUser>>);

  @override
  _i8.Future<bool> isFollowing(
    String? currentUserId,
    String? otherUserId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isFollowing,
          [
            currentUserId,
            otherUserId,
          ],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<List<_i12.MyUser>> searchUsers(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchUsers,
          [query],
        ),
        returnValue: _i8.Future<List<_i12.MyUser>>.value(<_i12.MyUser>[]),
      ) as _i8.Future<List<_i12.MyUser>>);

  @override
  _i8.Future<void> updateUserWithNameLowerCase(
    String? userId,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserWithNameLowerCase,
          [
            userId,
            name,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<bool> isUsernameAvailable(String? username) => (super.noSuchMethod(
        Invocation.method(
          #isUsernameAvailable,
          [username],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<_i12.MyUser?> getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i8.Future<_i12.MyUser?>.value(),
      ) as _i8.Future<_i12.MyUser?>);

  @override
  _i8.Future<void> addCustomList(
    String? userId,
    String? listName,
    List<String>? movies,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCustomList,
          [
            userId,
            listName,
            movies,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> removeCustomList(
    String? userId,
    String? listName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeCustomList,
          [
            userId,
            listName,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<String> getUniqueUsername(String? baseUsername) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUniqueUsername,
          [baseUsername],
        ),
        returnValue: _i8.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #getUniqueUsername,
            [baseUsername],
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<String?> uploadImage(_i13.File? image) => (super.noSuchMethod(
        Invocation.method(
          #uploadImage,
          [image],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<void> addMovieReview(
    String? userId,
    int? movieId,
    int? rating,
    String? text,
    String? title,
    String? username,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMovieReview,
          [
            userId,
            movieId,
            rating,
            text,
            title,
            username,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i14.MovieReview>> getReviewsForMovie(String? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReviewsForMovie,
          [movieId],
        ),
        returnValue:
            _i8.Future<List<_i14.MovieReview>>.value(<_i14.MovieReview>[]),
      ) as _i8.Future<List<_i14.MovieReview>>);

  @override
  _i8.Future<List<_i14.MovieReview>> getReviewsByUser(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReviewsByUser,
          [userId],
        ),
        returnValue:
            _i8.Future<List<_i14.MovieReview>>.value(<_i14.MovieReview>[]),
      ) as _i8.Future<List<_i14.MovieReview>>);

  @override
  _i8.Future<List<_i14.MovieReview>> getFriendsReviews(
    String? currentUserId,
    int? movieId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFriendsReviews,
          [
            currentUserId,
            movieId,
          ],
        ),
        returnValue:
            _i8.Future<List<_i14.MovieReview>>.value(<_i14.MovieReview>[]),
      ) as _i8.Future<List<_i14.MovieReview>>);

  @override
  _i8.Future<void> addToLikedMovies(
    String? userId,
    String? movie,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToLikedMovies,
          [
            userId,
            movie,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> removeFromLikedMovies(
    String? userId,
    String? movie,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromLikedMovies,
          [
            userId,
            movie,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<String>> getLikedMovieIds(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLikedMovieIds,
          [userId],
        ),
        returnValue: _i8.Future<List<String>>.value(<String>[]),
      ) as _i8.Future<List<String>>);

  @override
  _i8.Future<void> addToSeenMovies(
    String? userId,
    String? movie,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToSeenMovies,
          [
            userId,
            movie,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> removeFromSeenMovies(
    String? userId,
    String? movie,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromSeenMovies,
          [
            userId,
            movie,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<String>> getSeenMovieIds(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSeenMovieIds,
          [userId],
        ),
        returnValue: _i8.Future<List<String>>.value(<String>[]),
      ) as _i8.Future<List<String>>);

  @override
  _i8.Future<bool> checkLikedMovies(
    String? userId,
    String? movie,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkLikedMovies,
          [
            userId,
            movie,
          ],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<bool> checkSeenMovies(
    String? userId,
    String? movie,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkSeenMovies,
          [
            userId,
            movie,
          ],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<void> deleteReviews(
    String? userId,
    List<_i14.MovieReview>? reviews,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteReviews,
          [
            userId,
            reviews,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<Map<String, dynamic>>> getNotifications(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotifications,
          [userId],
        ),
        returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i8.Future<List<Map<String, dynamic>>>);

  @override
  _i8.Future<void> clearNotifications(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #clearNotifications,
          [userId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> removeNotification(
    String? userId,
    String? notificationId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeNotification,
          [
            userId,
            notificationId,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> updateUsernameInReviews(
    String? userId,
    String? newUsername,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUsernameInReviews,
          [
            userId,
            newUsername,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i6.FirebaseAuth {
  MockFirebaseAuth() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_3(
          this,
          Invocation.getter(#app),
        ),
      ) as _i5.FirebaseApp);

  @override
  set app(_i5.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
        Invocation.setter(
          #tenantId,
          tenantId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set customAuthDomain(String? customAuthDomain) => super.noSuchMethod(
        Invocation.setter(
          #customAuthDomain,
          customAuthDomain,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i8.Future<void> useAuthEmulator(
    String? host,
    int? port, {
    bool? automaticHostMapping = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #useAuthEmulator,
          [
            host,
            port,
          ],
          {#automaticHostMapping: automaticHostMapping},
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> applyActionCode(String? code) => (super.noSuchMethod(
        Invocation.method(
          #applyActionCode,
          [code],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i6.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkActionCode,
          [code],
        ),
        returnValue: _i8.Future<_i6.ActionCodeInfo>.value(_FakeActionCodeInfo_4(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
      ) as _i8.Future<_i6.ActionCodeInfo>);

  @override
  _i8.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmPasswordReset,
          [],
          {
            #code: code,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i6.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i8.Future<_i6.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i8.Future<_i6.UserCredential>);

  @override
  _i8.Future<List<String>> fetchSignInMethodsForEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSignInMethodsForEmail,
          [email],
        ),
        returnValue: _i8.Future<List<String>>.value(<String>[]),
      ) as _i8.Future<List<String>>);

  @override
  _i8.Future<_i6.UserCredential> getRedirectResult() => (super.noSuchMethod(
        Invocation.method(
          #getRedirectResult,
          [],
        ),
        returnValue: _i8.Future<_i6.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
      ) as _i8.Future<_i6.UserCredential>);

  @override
  bool isSignInWithEmailLink(String? emailLink) => (super.noSuchMethod(
        Invocation.method(
          #isSignInWithEmailLink,
          [emailLink],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i8.Stream<_i6.User?> authStateChanges() => (super.noSuchMethod(
        Invocation.method(
          #authStateChanges,
          [],
        ),
        returnValue: _i8.Stream<_i6.User?>.empty(),
      ) as _i8.Stream<_i6.User?>);

  @override
  _i8.Stream<_i6.User?> idTokenChanges() => (super.noSuchMethod(
        Invocation.method(
          #idTokenChanges,
          [],
        ),
        returnValue: _i8.Stream<_i6.User?>.empty(),
      ) as _i8.Stream<_i6.User?>);

  @override
  _i8.Stream<_i6.User?> userChanges() => (super.noSuchMethod(
        Invocation.method(
          #userChanges,
          [],
        ),
        returnValue: _i8.Stream<_i6.User?>.empty(),
      ) as _i8.Stream<_i6.User?>);

  @override
  _i8.Future<void> sendPasswordResetEmail({
    required String? email,
    _i6.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i6.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSignInLinkToEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setLanguageCode(String? languageCode) => (super.noSuchMethod(
        Invocation.method(
          #setLanguageCode,
          [languageCode],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setSettings({
    bool? appVerificationDisabledForTesting = false,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSettings,
          [],
          {
            #appVerificationDisabledForTesting:
                appVerificationDisabledForTesting,
            #userAccessGroup: userAccessGroup,
            #phoneNumber: phoneNumber,
            #smsCode: smsCode,
            #forceRecaptchaFlow: forceRecaptchaFlow,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setPersistence(_i6.Persistence? persistence) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPersistence,
          [persistence],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i6.UserCredential> signInAnonymously() => (super.noSuchMethod(
        Invocation.method(
          #signInAnonymously,
          [],
        ),
        returnValue: _i8.Future<_i6.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
      ) as _i8.Future<_i6.UserCredential>);

  @override
  _i8.Future<_i6.UserCredential> signInWithCredential(
          _i6.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCredential,
          [credential],
        ),
        returnValue: _i8.Future<_i6.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
      ) as _i8.Future<_i6.UserCredential>);

  @override
  _i8.Future<_i6.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCustomToken,
          [token],
        ),
        returnValue: _i8.Future<_i6.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
      ) as _i8.Future<_i6.UserCredential>);

  @override
  _i8.Future<_i6.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i8.Future<_i6.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i8.Future<_i6.UserCredential>);

  @override
  _i8.Future<_i6.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailLink,
          [],
          {
            #email: email,
            #emailLink: emailLink,
          },
        ),
        returnValue: _i8.Future<_i6.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
      ) as _i8.Future<_i6.UserCredential>);

  @override
  _i8.Future<_i6.UserCredential> signInWithProvider(
          _i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithProvider,
          [provider],
        ),
        returnValue: _i8.Future<_i6.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
      ) as _i8.Future<_i6.UserCredential>);

  @override
  _i8.Future<_i6.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i6.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue:
            _i8.Future<_i6.ConfirmationResult>.value(_FakeConfirmationResult_6(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i8.Future<_i6.ConfirmationResult>);

  @override
  _i8.Future<_i6.UserCredential> signInWithPopup(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPopup,
          [provider],
        ),
        returnValue: _i8.Future<_i6.UserCredential>.value(_FakeUserCredential_5(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
      ) as _i8.Future<_i6.UserCredential>);

  @override
  _i8.Future<void> signInWithRedirect(_i6.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithRedirect,
          [provider],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPasswordResetCode,
          [code],
        ),
        returnValue: _i8.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #verifyPasswordResetCode,
            [code],
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i6.PhoneMultiFactorInfo? multiFactorInfo,
    required _i6.PhoneVerificationCompleted? verificationCompleted,
    required _i6.PhoneVerificationFailed? verificationFailed,
    required _i6.PhoneCodeSent? codeSent,
    required _i6.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i6.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPhoneNumber,
          [],
          {
            #phoneNumber: phoneNumber,
            #multiFactorInfo: multiFactorInfo,
            #verificationCompleted: verificationCompleted,
            #verificationFailed: verificationFailed,
            #codeSent: codeSent,
            #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
            #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
            #timeout: timeout,
            #forceResendingToken: forceResendingToken,
            #multiFactorSession: multiFactorSession,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> revokeTokenWithAuthorizationCode(
          String? authorizationCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #revokeTokenWithAuthorizationCode,
          [authorizationCode],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [CustomAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomAuth extends _i1.Mock implements _i15.CustomAuth {
  MockCustomAuth() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Logger get logger => (super.noSuchMethod(
        Invocation.getter(#logger),
        returnValue: _FakeLogger_2(
          this,
          Invocation.getter(#logger),
        ),
      ) as _i4.Logger);

  @override
  _i8.Stream<_i6.User?> get authStateChanges => (super.noSuchMethod(
        Invocation.getter(#authStateChanges),
        returnValue: _i8.Stream<_i6.User?>.empty(),
      ) as _i8.Stream<_i6.User?>);

  @override
  _i8.Future<void> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<bool> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);
}

/// A class which mocks [NotificationsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationsService extends _i1.Mock
    implements _i16.NotificationsService {
  MockNotificationsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get unreadCount => (super.noSuchMethod(
        Invocation.getter(#unreadCount),
        returnValue: 0,
      ) as int);

  @override
  void incrementUnreadCount() => super.noSuchMethod(
        Invocation.method(
          #incrementUnreadCount,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void resetUnreadCount() => super.noSuchMethod(
        Invocation.method(
          #resetUnreadCount,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
