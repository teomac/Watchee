// Mocks generated by Mockito 5.4.4 from annotations
// in dima_project/test/widget/pages/watchlists/search_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:io' as _i18;
import 'dart:typed_data' as _i15;

import 'package:cloud_firestore/cloud_firestore.dart' as _i6;
import 'package:cloud_firestore_platform_interface/cloud_firestore_platform_interface.dart'
    as _i5;
import 'package:dima_project/models/movie.dart' as _i9;
import 'package:dima_project/models/movie_review.dart' as _i19;
import 'package:dima_project/models/person.dart' as _i10;
import 'package:dima_project/models/tiny_movie.dart' as _i22;
import 'package:dima_project/models/user.dart' as _i17;
import 'package:dima_project/models/watchlist.dart' as _i21;
import 'package:dima_project/services/tmdb_api_service.dart' as _i23;
import 'package:dima_project/services/user_service.dart' as _i16;
import 'package:dima_project/services/watchlist_service.dart' as _i20;
import 'package:firebase_auth/firebase_auth.dart' as _i4;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i3;
import 'package:firebase_core/firebase_core.dart' as _i2;
import 'package:flutter/foundation.dart' as _i12;
import 'package:flutter/src/painting/image_cache.dart' as _i25;
import 'package:flutter/src/painting/image_provider.dart' as _i13;
import 'package:flutter/src/painting/image_stream.dart' as _i11;
import 'package:http/http.dart' as _i24;
import 'package:logger/logger.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i14;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseApp_0 extends _i1.SmartFake implements _i2.FirebaseApp {
  _FakeFirebaseApp_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeActionCodeInfo_1 extends _i1.SmartFake
    implements _i3.ActionCodeInfo {
  _FakeActionCodeInfo_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserCredential_2 extends _i1.SmartFake
    implements _i4.UserCredential {
  _FakeUserCredential_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfirmationResult_3 extends _i1.SmartFake
    implements _i4.ConfirmationResult {
  _FakeConfirmationResult_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSettings_4 extends _i1.SmartFake implements _i5.Settings {
  _FakeSettings_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCollectionReference_5<T extends Object?> extends _i1.SmartFake
    implements _i6.CollectionReference<T> {
  _FakeCollectionReference_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWriteBatch_6 extends _i1.SmartFake implements _i6.WriteBatch {
  _FakeWriteBatch_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLoadBundleTask_7 extends _i1.SmartFake
    implements _i6.LoadBundleTask {
  _FakeLoadBundleTask_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQuerySnapshot_8<T1 extends Object?> extends _i1.SmartFake
    implements _i6.QuerySnapshot<T1> {
  _FakeQuerySnapshot_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQuery_9<T extends Object?> extends _i1.SmartFake
    implements _i6.Query<T> {
  _FakeQuery_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDocumentReference_10<T extends Object?> extends _i1.SmartFake
    implements _i6.DocumentReference<T> {
  _FakeDocumentReference_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_11<T1> extends _i1.SmartFake implements _i7.Future<T1> {
  _FakeFuture_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLogger_12 extends _i1.SmartFake implements _i8.Logger {
  _FakeLogger_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovie_13 extends _i1.SmartFake implements _i9.Movie {
  _FakeMovie_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePerson_14 extends _i1.SmartFake implements _i10.Person {
  _FakePerson_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeImageStreamCompleter_15 extends _i1.SmartFake
    implements _i11.ImageStreamCompleter {
  _FakeImageStreamCompleter_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString(
          {_i12.DiagnosticLevel? minLevel = _i12.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeImageStream_16 extends _i1.SmartFake implements _i11.ImageStream {
  _FakeImageStream_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString(
          {_i12.DiagnosticLevel? minLevel = _i12.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeNetworkImage_17 extends _i1.SmartFake implements _i13.NetworkImage {
  _FakeNetworkImage_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i4.FirebaseAuth {
  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
        returnValueForMissingStub: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
      ) as _i2.FirebaseApp);

  @override
  set app(_i2.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
        Invocation.setter(
          #tenantId,
          tenantId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set customAuthDomain(String? customAuthDomain) => super.noSuchMethod(
        Invocation.setter(
          #customAuthDomain,
          customAuthDomain,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i7.Future<void> useAuthEmulator(
    String? host,
    int? port, {
    bool? automaticHostMapping = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #useAuthEmulator,
          [
            host,
            port,
          ],
          {#automaticHostMapping: automaticHostMapping},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> applyActionCode(String? code) => (super.noSuchMethod(
        Invocation.method(
          #applyActionCode,
          [code],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i3.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkActionCode,
          [code],
        ),
        returnValue: _i7.Future<_i3.ActionCodeInfo>.value(_FakeActionCodeInfo_1(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.ActionCodeInfo>.value(_FakeActionCodeInfo_1(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
      ) as _i7.Future<_i3.ActionCodeInfo>);

  @override
  _i7.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmPasswordReset,
          [],
          {
            #code: code,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i4.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<List<String>> fetchSignInMethodsForEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSignInMethodsForEmail,
          [email],
        ),
        returnValue: _i7.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i7.Future<List<String>>.value(<String>[]),
      ) as _i7.Future<List<String>>);

  @override
  _i7.Future<_i4.UserCredential> getRedirectResult() => (super.noSuchMethod(
        Invocation.method(
          #getRedirectResult,
          [],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  bool isSignInWithEmailLink(String? emailLink) => (super.noSuchMethod(
        Invocation.method(
          #isSignInWithEmailLink,
          [emailLink],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i7.Stream<_i4.User?> authStateChanges() => (super.noSuchMethod(
        Invocation.method(
          #authStateChanges,
          [],
        ),
        returnValue: _i7.Stream<_i4.User?>.empty(),
        returnValueForMissingStub: _i7.Stream<_i4.User?>.empty(),
      ) as _i7.Stream<_i4.User?>);

  @override
  _i7.Stream<_i4.User?> idTokenChanges() => (super.noSuchMethod(
        Invocation.method(
          #idTokenChanges,
          [],
        ),
        returnValue: _i7.Stream<_i4.User?>.empty(),
        returnValueForMissingStub: _i7.Stream<_i4.User?>.empty(),
      ) as _i7.Stream<_i4.User?>);

  @override
  _i7.Stream<_i4.User?> userChanges() => (super.noSuchMethod(
        Invocation.method(
          #userChanges,
          [],
        ),
        returnValue: _i7.Stream<_i4.User?>.empty(),
        returnValueForMissingStub: _i7.Stream<_i4.User?>.empty(),
      ) as _i7.Stream<_i4.User?>);

  @override
  _i7.Future<void> sendPasswordResetEmail({
    required String? email,
    _i3.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i3.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSignInLinkToEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setLanguageCode(String? languageCode) => (super.noSuchMethod(
        Invocation.method(
          #setLanguageCode,
          [languageCode],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setSettings({
    bool? appVerificationDisabledForTesting = false,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSettings,
          [],
          {
            #appVerificationDisabledForTesting:
                appVerificationDisabledForTesting,
            #userAccessGroup: userAccessGroup,
            #phoneNumber: phoneNumber,
            #smsCode: smsCode,
            #forceRecaptchaFlow: forceRecaptchaFlow,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setPersistence(_i3.Persistence? persistence) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPersistence,
          [persistence],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i4.UserCredential> signInAnonymously() => (super.noSuchMethod(
        Invocation.method(
          #signInAnonymously,
          [],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithCredential(
          _i3.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCredential,
          [credential],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCustomToken,
          [token],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailLink,
          [],
          {
            #email: email,
            #emailLink: emailLink,
          },
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> signInWithProvider(
          _i3.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithProvider,
          [provider],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i4.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue:
            _i7.Future<_i4.ConfirmationResult>.value(_FakeConfirmationResult_3(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.ConfirmationResult>.value(_FakeConfirmationResult_3(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i7.Future<_i4.ConfirmationResult>);

  @override
  _i7.Future<_i4.UserCredential> signInWithPopup(_i3.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPopup,
          [provider],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<void> signInWithRedirect(_i3.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithRedirect,
          [provider],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPasswordResetCode,
          [code],
        ),
        returnValue: _i7.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #verifyPasswordResetCode,
            [code],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #verifyPasswordResetCode,
            [code],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i3.PhoneMultiFactorInfo? multiFactorInfo,
    required _i3.PhoneVerificationCompleted? verificationCompleted,
    required _i3.PhoneVerificationFailed? verificationFailed,
    required _i3.PhoneCodeSent? codeSent,
    required _i3.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i3.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPhoneNumber,
          [],
          {
            #phoneNumber: phoneNumber,
            #multiFactorInfo: multiFactorInfo,
            #verificationCompleted: verificationCompleted,
            #verificationFailed: verificationFailed,
            #codeSent: codeSent,
            #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
            #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
            #timeout: timeout,
            #forceResendingToken: forceResendingToken,
            #multiFactorSession: multiFactorSession,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> revokeTokenWithAuthorizationCode(
          String? authorizationCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #revokeTokenWithAuthorizationCode,
          [authorizationCode],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [FirebaseFirestore].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseFirestore extends _i1.Mock implements _i6.FirebaseFirestore {
  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
        returnValueForMissingStub: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
      ) as _i2.FirebaseApp);

  @override
  set app(_i2.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get databaseURL => (super.noSuchMethod(
        Invocation.getter(#databaseURL),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#databaseURL),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#databaseURL),
        ),
      ) as String);

  @override
  set databaseURL(String? _databaseURL) => super.noSuchMethod(
        Invocation.setter(
          #databaseURL,
          _databaseURL,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get databaseId => (super.noSuchMethod(
        Invocation.getter(#databaseId),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#databaseId),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#databaseId),
        ),
      ) as String);

  @override
  set databaseId(String? _databaseId) => super.noSuchMethod(
        Invocation.setter(
          #databaseId,
          _databaseId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set settings(_i5.Settings? settings) => super.noSuchMethod(
        Invocation.setter(
          #settings,
          settings,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Settings get settings => (super.noSuchMethod(
        Invocation.getter(#settings),
        returnValue: _FakeSettings_4(
          this,
          Invocation.getter(#settings),
        ),
        returnValueForMissingStub: _FakeSettings_4(
          this,
          Invocation.getter(#settings),
        ),
      ) as _i5.Settings);

  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i6.CollectionReference<Map<String, dynamic>> collection(
          String? collectionPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #collection,
          [collectionPath],
        ),
        returnValue: _FakeCollectionReference_5<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collection,
            [collectionPath],
          ),
        ),
        returnValueForMissingStub:
            _FakeCollectionReference_5<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collection,
            [collectionPath],
          ),
        ),
      ) as _i6.CollectionReference<Map<String, dynamic>>);

  @override
  _i6.WriteBatch batch() => (super.noSuchMethod(
        Invocation.method(
          #batch,
          [],
        ),
        returnValue: _FakeWriteBatch_6(
          this,
          Invocation.method(
            #batch,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeWriteBatch_6(
          this,
          Invocation.method(
            #batch,
            [],
          ),
        ),
      ) as _i6.WriteBatch);

  @override
  _i7.Future<void> clearPersistence() => (super.noSuchMethod(
        Invocation.method(
          #clearPersistence,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> enablePersistence(
          [_i5.PersistenceSettings? persistenceSettings]) =>
      (super.noSuchMethod(
        Invocation.method(
          #enablePersistence,
          [persistenceSettings],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i6.LoadBundleTask loadBundle(_i15.Uint8List? bundle) => (super.noSuchMethod(
        Invocation.method(
          #loadBundle,
          [bundle],
        ),
        returnValue: _FakeLoadBundleTask_7(
          this,
          Invocation.method(
            #loadBundle,
            [bundle],
          ),
        ),
        returnValueForMissingStub: _FakeLoadBundleTask_7(
          this,
          Invocation.method(
            #loadBundle,
            [bundle],
          ),
        ),
      ) as _i6.LoadBundleTask);

  @override
  void useFirestoreEmulator(
    String? host,
    int? port, {
    bool? sslEnabled = false,
    bool? automaticHostMapping = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #useFirestoreEmulator,
          [
            host,
            port,
          ],
          {
            #sslEnabled: sslEnabled,
            #automaticHostMapping: automaticHostMapping,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<_i6.QuerySnapshot<T>> namedQueryWithConverterGet<T>(
    String? name, {
    _i5.GetOptions? options = const _i5.GetOptions(),
    required _i6.FromFirestore<T>? fromFirestore,
    required _i6.ToFirestore<T>? toFirestore,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #namedQueryWithConverterGet,
          [name],
          {
            #options: options,
            #fromFirestore: fromFirestore,
            #toFirestore: toFirestore,
          },
        ),
        returnValue:
            _i7.Future<_i6.QuerySnapshot<T>>.value(_FakeQuerySnapshot_8<T>(
          this,
          Invocation.method(
            #namedQueryWithConverterGet,
            [name],
            {
              #options: options,
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i6.QuerySnapshot<T>>.value(_FakeQuerySnapshot_8<T>(
          this,
          Invocation.method(
            #namedQueryWithConverterGet,
            [name],
            {
              #options: options,
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            },
          ),
        )),
      ) as _i7.Future<_i6.QuerySnapshot<T>>);

  @override
  _i7.Future<_i6.QuerySnapshot<Map<String, dynamic>>> namedQueryGet(
    String? name, {
    _i5.GetOptions? options = const _i5.GetOptions(),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #namedQueryGet,
          [name],
          {#options: options},
        ),
        returnValue: _i7.Future<_i6.QuerySnapshot<Map<String, dynamic>>>.value(
            _FakeQuerySnapshot_8<Map<String, dynamic>>(
          this,
          Invocation.method(
            #namedQueryGet,
            [name],
            {#options: options},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i6.QuerySnapshot<Map<String, dynamic>>>.value(
                _FakeQuerySnapshot_8<Map<String, dynamic>>(
          this,
          Invocation.method(
            #namedQueryGet,
            [name],
            {#options: options},
          ),
        )),
      ) as _i7.Future<_i6.QuerySnapshot<Map<String, dynamic>>>);

  @override
  _i6.Query<Map<String, dynamic>> collectionGroup(String? collectionPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #collectionGroup,
          [collectionPath],
        ),
        returnValue: _FakeQuery_9<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collectionGroup,
            [collectionPath],
          ),
        ),
        returnValueForMissingStub: _FakeQuery_9<Map<String, dynamic>>(
          this,
          Invocation.method(
            #collectionGroup,
            [collectionPath],
          ),
        ),
      ) as _i6.Query<Map<String, dynamic>>);

  @override
  _i7.Future<void> disableNetwork() => (super.noSuchMethod(
        Invocation.method(
          #disableNetwork,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i6.DocumentReference<Map<String, dynamic>> doc(String? documentPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #doc,
          [documentPath],
        ),
        returnValue: _FakeDocumentReference_10<Map<String, dynamic>>(
          this,
          Invocation.method(
            #doc,
            [documentPath],
          ),
        ),
        returnValueForMissingStub:
            _FakeDocumentReference_10<Map<String, dynamic>>(
          this,
          Invocation.method(
            #doc,
            [documentPath],
          ),
        ),
      ) as _i6.DocumentReference<Map<String, dynamic>>);

  @override
  _i7.Future<void> enableNetwork() => (super.noSuchMethod(
        Invocation.method(
          #enableNetwork,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Stream<void> snapshotsInSync() => (super.noSuchMethod(
        Invocation.method(
          #snapshotsInSync,
          [],
        ),
        returnValue: _i7.Stream<void>.empty(),
        returnValueForMissingStub: _i7.Stream<void>.empty(),
      ) as _i7.Stream<void>);

  @override
  _i7.Future<T> runTransaction<T>(
    _i6.TransactionHandler<T>? transactionHandler, {
    Duration? timeout = const Duration(seconds: 30),
    int? maxAttempts = 5,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runTransaction,
          [transactionHandler],
          {
            #timeout: timeout,
            #maxAttempts: maxAttempts,
          },
        ),
        returnValue: _i14.ifNotNull(
              _i14.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runTransaction,
                  [transactionHandler],
                  {
                    #timeout: timeout,
                    #maxAttempts: maxAttempts,
                  },
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_11<T>(
              this,
              Invocation.method(
                #runTransaction,
                [transactionHandler],
                {
                  #timeout: timeout,
                  #maxAttempts: maxAttempts,
                },
              ),
            ),
        returnValueForMissingStub: _i14.ifNotNull(
              _i14.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runTransaction,
                  [transactionHandler],
                  {
                    #timeout: timeout,
                    #maxAttempts: maxAttempts,
                  },
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_11<T>(
              this,
              Invocation.method(
                #runTransaction,
                [transactionHandler],
                {
                  #timeout: timeout,
                  #maxAttempts: maxAttempts,
                },
              ),
            ),
      ) as _i7.Future<T>);

  @override
  _i7.Future<void> terminate() => (super.noSuchMethod(
        Invocation.method(
          #terminate,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> waitForPendingWrites() => (super.noSuchMethod(
        Invocation.method(
          #waitForPendingWrites,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setIndexConfiguration({
    required List<_i5.Index>? indexes,
    List<_i5.FieldOverrides>? fieldOverrides,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setIndexConfiguration,
          [],
          {
            #indexes: indexes,
            #fieldOverrides: fieldOverrides,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setIndexConfigurationFromJSON(String? json) =>
      (super.noSuchMethod(
        Invocation.method(
          #setIndexConfigurationFromJSON,
          [json],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i16.UserService {
  @override
  _i8.Logger get logger => (super.noSuchMethod(
        Invocation.getter(#logger),
        returnValue: _FakeLogger_12(
          this,
          Invocation.getter(#logger),
        ),
        returnValueForMissingStub: _FakeLogger_12(
          this,
          Invocation.getter(#logger),
        ),
      ) as _i8.Logger);

  @override
  _i7.Future<void> createUser(_i17.MyUser? user) => (super.noSuchMethod(
        Invocation.method(
          #createUser,
          [user],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i17.MyUser?> getUser(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [userId],
        ),
        returnValue: _i7.Future<_i17.MyUser?>.value(),
        returnValueForMissingStub: _i7.Future<_i17.MyUser?>.value(),
      ) as _i7.Future<_i17.MyUser?>);

  @override
  _i7.Future<void> updateUser(_i17.MyUser? user) => (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [user],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> deleteUser(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [userId],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> followUser(
    String? currentUserId,
    String? userToFollowId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #followUser,
          [
            currentUserId,
            userToFollowId,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> unfollowUser(
    String? currentUserId,
    String? userToUnfollowId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #unfollowUser,
          [
            currentUserId,
            userToUnfollowId,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> removeFollower(
    String? currentUserId,
    String? followerToRemoveId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFollower,
          [
            currentUserId,
            followerToRemoveId,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<_i17.MyUser>> getFollowers(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFollowers,
          [userId],
        ),
        returnValue: _i7.Future<List<_i17.MyUser>>.value(<_i17.MyUser>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i17.MyUser>>.value(<_i17.MyUser>[]),
      ) as _i7.Future<List<_i17.MyUser>>);

  @override
  _i7.Future<List<_i17.MyUser>> getFollowing(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFollowing,
          [userId],
        ),
        returnValue: _i7.Future<List<_i17.MyUser>>.value(<_i17.MyUser>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i17.MyUser>>.value(<_i17.MyUser>[]),
      ) as _i7.Future<List<_i17.MyUser>>);

  @override
  _i7.Future<bool> isFollowing(
    String? currentUserId,
    String? otherUserId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isFollowing,
          [
            currentUserId,
            otherUserId,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<List<_i17.MyUser>> searchUsers(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchUsers,
          [query],
        ),
        returnValue: _i7.Future<List<_i17.MyUser>>.value(<_i17.MyUser>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i17.MyUser>>.value(<_i17.MyUser>[]),
      ) as _i7.Future<List<_i17.MyUser>>);

  @override
  _i7.Future<void> updateUserWithNameLowerCase(
    String? userId,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserWithNameLowerCase,
          [
            userId,
            name,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<bool> isUsernameAvailable(String? username) => (super.noSuchMethod(
        Invocation.method(
          #isUsernameAvailable,
          [username],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<_i17.MyUser?> getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i7.Future<_i17.MyUser?>.value(),
        returnValueForMissingStub: _i7.Future<_i17.MyUser?>.value(),
      ) as _i7.Future<_i17.MyUser?>);

  @override
  _i7.Future<void> addCustomList(
    String? userId,
    String? listName,
    List<String>? movies,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCustomList,
          [
            userId,
            listName,
            movies,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> removeCustomList(
    String? userId,
    String? listName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeCustomList,
          [
            userId,
            listName,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<String> getUniqueUsername(String? baseUsername) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUniqueUsername,
          [baseUsername],
        ),
        returnValue: _i7.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getUniqueUsername,
            [baseUsername],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getUniqueUsername,
            [baseUsername],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<String?> uploadImage(_i18.File? image) => (super.noSuchMethod(
        Invocation.method(
          #uploadImage,
          [image],
        ),
        returnValue: _i7.Future<String?>.value(),
        returnValueForMissingStub: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i7.Future<void> addMovieReview(
    String? userId,
    int? movieId,
    int? rating,
    String? text,
    String? title,
    String? username,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMovieReview,
          [
            userId,
            movieId,
            rating,
            text,
            title,
            username,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<_i19.MovieReview>> getReviewsForMovie(String? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReviewsForMovie,
          [movieId],
        ),
        returnValue:
            _i7.Future<List<_i19.MovieReview>>.value(<_i19.MovieReview>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i19.MovieReview>>.value(<_i19.MovieReview>[]),
      ) as _i7.Future<List<_i19.MovieReview>>);

  @override
  _i7.Future<List<_i19.MovieReview>> getReviewsByUser(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReviewsByUser,
          [userId],
        ),
        returnValue:
            _i7.Future<List<_i19.MovieReview>>.value(<_i19.MovieReview>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i19.MovieReview>>.value(<_i19.MovieReview>[]),
      ) as _i7.Future<List<_i19.MovieReview>>);

  @override
  _i7.Future<List<_i19.MovieReview>> getFriendsReviews(
    String? currentUserId,
    int? movieId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFriendsReviews,
          [
            currentUserId,
            movieId,
          ],
        ),
        returnValue:
            _i7.Future<List<_i19.MovieReview>>.value(<_i19.MovieReview>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i19.MovieReview>>.value(<_i19.MovieReview>[]),
      ) as _i7.Future<List<_i19.MovieReview>>);

  @override
  _i7.Future<void> addToLikedMovies(
    String? userId,
    String? movie,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToLikedMovies,
          [
            userId,
            movie,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> removeFromLikedMovies(
    String? userId,
    String? movie,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromLikedMovies,
          [
            userId,
            movie,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<String>> getLikedMovieIds(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLikedMovieIds,
          [userId],
        ),
        returnValue: _i7.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i7.Future<List<String>>.value(<String>[]),
      ) as _i7.Future<List<String>>);

  @override
  _i7.Future<void> addToSeenMovies(
    String? userId,
    String? movie,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToSeenMovies,
          [
            userId,
            movie,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> removeFromSeenMovies(
    String? userId,
    String? movie,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromSeenMovies,
          [
            userId,
            movie,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<String>> getSeenMovieIds(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSeenMovieIds,
          [userId],
        ),
        returnValue: _i7.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i7.Future<List<String>>.value(<String>[]),
      ) as _i7.Future<List<String>>);

  @override
  _i7.Future<bool> checkLikedMovies(
    String? userId,
    String? movie,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkLikedMovies,
          [
            userId,
            movie,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> checkSeenMovies(
    String? userId,
    String? movie,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkSeenMovies,
          [
            userId,
            movie,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> deleteReviews(
    String? userId,
    List<_i19.MovieReview>? reviews,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteReviews,
          [
            userId,
            reviews,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<Map<String, dynamic>>> getNotifications(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotifications,
          [userId],
        ),
        returnValue: _i7.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
        returnValueForMissingStub: _i7.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i7.Future<List<Map<String, dynamic>>>);

  @override
  _i7.Future<void> clearNotifications(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #clearNotifications,
          [userId],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> removeNotification(
    String? userId,
    String? notificationId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeNotification,
          [
            userId,
            notificationId,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateUsernameInReviews(
    String? userId,
    String? newUsername,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUsernameInReviews,
          [
            userId,
            newUsername,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [WatchlistService].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistService extends _i1.Mock implements _i20.WatchlistService {
  @override
  _i8.Logger get logger => (super.noSuchMethod(
        Invocation.getter(#logger),
        returnValue: _FakeLogger_12(
          this,
          Invocation.getter(#logger),
        ),
        returnValueForMissingStub: _FakeLogger_12(
          this,
          Invocation.getter(#logger),
        ),
      ) as _i8.Logger);

  @override
  _i7.Future<void> createWatchList(
    _i17.MyUser? user,
    String? name,
    bool? isPrivate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createWatchList,
          [
            user,
            name,
            isPrivate,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateWatchList(_i21.WatchList? watchList) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateWatchList,
          [watchList],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> deleteWatchList(_i21.WatchList? watchList) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteWatchList,
          [watchList],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<_i21.WatchList>> getOwnWatchLists(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOwnWatchLists,
          [userId],
        ),
        returnValue: _i7.Future<List<_i21.WatchList>>.value(<_i21.WatchList>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i21.WatchList>>.value(<_i21.WatchList>[]),
      ) as _i7.Future<List<_i21.WatchList>>);

  @override
  _i7.Future<List<_i21.WatchList>> getCollabWatchLists(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCollabWatchLists,
          [userId],
        ),
        returnValue: _i7.Future<List<_i21.WatchList>>.value(<_i21.WatchList>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i21.WatchList>>.value(<_i21.WatchList>[]),
      ) as _i7.Future<List<_i21.WatchList>>);

  @override
  _i7.Future<List<_i21.WatchList>> getPublicWatchLists(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPublicWatchLists,
          [userId],
        ),
        returnValue: _i7.Future<List<_i21.WatchList>>.value(<_i21.WatchList>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i21.WatchList>>.value(<_i21.WatchList>[]),
      ) as _i7.Future<List<_i21.WatchList>>);

  @override
  _i7.Future<_i21.WatchList?> getWatchList(
    String? userId,
    String? watchListId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchList,
          [
            userId,
            watchListId,
          ],
        ),
        returnValue: _i7.Future<_i21.WatchList?>.value(),
        returnValueForMissingStub: _i7.Future<_i21.WatchList?>.value(),
      ) as _i7.Future<_i21.WatchList?>);

  @override
  _i7.Future<List<_i21.WatchList>> getFollowingWatchlists(_i17.MyUser? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFollowingWatchlists,
          [user],
        ),
        returnValue: _i7.Future<List<_i21.WatchList>>.value(<_i21.WatchList>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i21.WatchList>>.value(<_i21.WatchList>[]),
      ) as _i7.Future<List<_i21.WatchList>>);

  @override
  _i7.Future<void> followWatchlist(
    String? userId,
    String? watchlistId,
    String? watchlistOwner,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #followWatchlist,
          [
            userId,
            watchlistId,
            watchlistOwner,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> unfollowWatchlist(
    String? userId,
    String? watchlistId,
    String? watchlistOwner,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #unfollowWatchlist,
          [
            userId,
            watchlistId,
            watchlistOwner,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> addMovieToWatchlist(
    String? userId,
    String? watchlistId,
    _i22.Tinymovie? movie,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMovieToWatchlist,
          [
            userId,
            watchlistId,
            movie,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> removeMovieFromWatchlist(
    String? userId,
    String? watchlistId,
    _i22.Tinymovie? movie,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeMovieFromWatchlist,
          [
            userId,
            watchlistId,
            movie,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<bool> inviteCollaborator(
    String? watchlistId,
    String? watchlistOwner,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #inviteCollaborator,
          [
            watchlistId,
            watchlistOwner,
            userId,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> acceptInvite(
    String? watchlistId,
    String? watchlistOwner,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #acceptInvite,
          [
            watchlistId,
            watchlistOwner,
            userId,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> declineInvite(
    String? watchlistId,
    String? watchlistOwner,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #declineInvite,
          [
            watchlistId,
            watchlistOwner,
            userId,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> removeMyselfAsCollaborator(
    String? watchlistId,
    String? watchlistOwner,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeMyselfAsCollaborator,
          [
            watchlistId,
            watchlistOwner,
            userId,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [TmdbApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTmdbApiService extends _i1.Mock implements _i23.TmdbApiService {
  @override
  _i7.Future<List<_i9.Movie>> fetchTrendingMovies([_i24.Client? client]) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchTrendingMovies,
          [client],
        ),
        returnValue: _i7.Future<List<_i9.Movie>>.value(<_i9.Movie>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i9.Movie>>.value(<_i9.Movie>[]),
      ) as _i7.Future<List<_i9.Movie>>);

  @override
  _i7.Future<List<_i9.Movie>> fetchNowPlayingMovies() => (super.noSuchMethod(
        Invocation.method(
          #fetchNowPlayingMovies,
          [],
        ),
        returnValue: _i7.Future<List<_i9.Movie>>.value(<_i9.Movie>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i9.Movie>>.value(<_i9.Movie>[]),
      ) as _i7.Future<List<_i9.Movie>>);

  @override
  _i7.Future<List<_i9.Movie>> fetchTopRatedMovies() => (super.noSuchMethod(
        Invocation.method(
          #fetchTopRatedMovies,
          [],
        ),
        returnValue: _i7.Future<List<_i9.Movie>>.value(<_i9.Movie>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i9.Movie>>.value(<_i9.Movie>[]),
      ) as _i7.Future<List<_i9.Movie>>);

  @override
  _i7.Future<List<_i9.Movie>> fetchUpcomingMovies() => (super.noSuchMethod(
        Invocation.method(
          #fetchUpcomingMovies,
          [],
        ),
        returnValue: _i7.Future<List<_i9.Movie>>.value(<_i9.Movie>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i9.Movie>>.value(<_i9.Movie>[]),
      ) as _i7.Future<List<_i9.Movie>>);

  @override
  _i7.Future<_i9.Movie> retrieveFilmInfo(int? movieId) => (super.noSuchMethod(
        Invocation.method(
          #retrieveFilmInfo,
          [movieId],
        ),
        returnValue: _i7.Future<_i9.Movie>.value(_FakeMovie_13(
          this,
          Invocation.method(
            #retrieveFilmInfo,
            [movieId],
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i9.Movie>.value(_FakeMovie_13(
          this,
          Invocation.method(
            #retrieveFilmInfo,
            [movieId],
          ),
        )),
      ) as _i7.Future<_i9.Movie>);

  @override
  _i7.Future<List<Map<String, dynamic>>> retrieveCast(int? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveCast,
          [movieId],
        ),
        returnValue: _i7.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
        returnValueForMissingStub: _i7.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i7.Future<List<Map<String, dynamic>>>);

  @override
  _i7.Future<String> retrieveTrailer(int? movieId) => (super.noSuchMethod(
        Invocation.method(
          #retrieveTrailer,
          [movieId],
        ),
        returnValue: _i7.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #retrieveTrailer,
            [movieId],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #retrieveTrailer,
            [movieId],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<List<_i9.Movie>> searchMovie(String? query) => (super.noSuchMethod(
        Invocation.method(
          #searchMovie,
          [query],
        ),
        returnValue: _i7.Future<List<_i9.Movie>>.value(<_i9.Movie>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i9.Movie>>.value(<_i9.Movie>[]),
      ) as _i7.Future<List<_i9.Movie>>);

  @override
  _i7.Future<List<_i9.Movie>> fetchMoviesByReleaseDate(String? releaseDate) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMoviesByReleaseDate,
          [releaseDate],
        ),
        returnValue: _i7.Future<List<_i9.Movie>>.value(<_i9.Movie>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i9.Movie>>.value(<_i9.Movie>[]),
      ) as _i7.Future<List<_i9.Movie>>);

  @override
  _i7.Future<Map<String, List<Map<String, dynamic>>>> fetchAllProviders(
          int? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAllProviders,
          [movieId],
        ),
        returnValue: _i7.Future<Map<String, List<Map<String, dynamic>>>>.value(
            <String, List<Map<String, dynamic>>>{}),
        returnValueForMissingStub:
            _i7.Future<Map<String, List<Map<String, dynamic>>>>.value(
                <String, List<Map<String, dynamic>>>{}),
      ) as _i7.Future<Map<String, List<Map<String, dynamic>>>>);

  @override
  _i7.Future<List<_i9.Movie>> fetchMoviesByGenres(List<int>? genreIds) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMoviesByGenres,
          [genreIds],
        ),
        returnValue: _i7.Future<List<_i9.Movie>>.value(<_i9.Movie>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i9.Movie>>.value(<_i9.Movie>[]),
      ) as _i7.Future<List<_i9.Movie>>);

  @override
  _i7.Future<List<_i9.Movie>> fetchRecommendedMovies(int? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchRecommendedMovies,
          [movieId],
        ),
        returnValue: _i7.Future<List<_i9.Movie>>.value(<_i9.Movie>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i9.Movie>>.value(<_i9.Movie>[]),
      ) as _i7.Future<List<_i9.Movie>>);

  @override
  _i7.Future<List<_i10.Person>> searchPeople(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchPeople,
          [query],
        ),
        returnValue: _i7.Future<List<_i10.Person>>.value(<_i10.Person>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i10.Person>>.value(<_i10.Person>[]),
      ) as _i7.Future<List<_i10.Person>>);

  @override
  _i7.Future<_i10.Person> fetchPersonDetails(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPersonDetails,
          [personId],
        ),
        returnValue: _i7.Future<_i10.Person>.value(_FakePerson_14(
          this,
          Invocation.method(
            #fetchPersonDetails,
            [personId],
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i10.Person>.value(_FakePerson_14(
          this,
          Invocation.method(
            #fetchPersonDetails,
            [personId],
          ),
        )),
      ) as _i7.Future<_i10.Person>);

  @override
  _i7.Future<List<_i9.Movie>> fetchPersonMovies(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPersonMovies,
          [personId],
        ),
        returnValue: _i7.Future<List<_i9.Movie>>.value(<_i9.Movie>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i9.Movie>>.value(<_i9.Movie>[]),
      ) as _i7.Future<List<_i9.Movie>>);
}

/// A class which mocks [NetworkImage].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkImage extends _i1.Mock implements _i13.NetworkImage {
  @override
  String get url => (super.noSuchMethod(
        Invocation.getter(#url),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#url),
        ),
        returnValueForMissingStub: _i14.dummyValue<String>(
          this,
          Invocation.getter(#url),
        ),
      ) as String);

  @override
  double get scale => (super.noSuchMethod(
        Invocation.getter(#scale),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  _i11.ImageStreamCompleter loadBuffer(
    _i13.NetworkImage? key,
    _i13.DecoderBufferCallback? decode,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadBuffer,
          [
            key,
            decode,
          ],
        ),
        returnValue: _FakeImageStreamCompleter_15(
          this,
          Invocation.method(
            #loadBuffer,
            [
              key,
              decode,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeImageStreamCompleter_15(
          this,
          Invocation.method(
            #loadBuffer,
            [
              key,
              decode,
            ],
          ),
        ),
      ) as _i11.ImageStreamCompleter);

  @override
  _i11.ImageStreamCompleter loadImage(
    _i13.NetworkImage? key,
    _i13.ImageDecoderCallback? decode,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadImage,
          [
            key,
            decode,
          ],
        ),
        returnValue: _FakeImageStreamCompleter_15(
          this,
          Invocation.method(
            #loadImage,
            [
              key,
              decode,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeImageStreamCompleter_15(
          this,
          Invocation.method(
            #loadImage,
            [
              key,
              decode,
            ],
          ),
        ),
      ) as _i11.ImageStreamCompleter);

  @override
  _i11.ImageStream resolve(_i13.ImageConfiguration? configuration) =>
      (super.noSuchMethod(
        Invocation.method(
          #resolve,
          [configuration],
        ),
        returnValue: _FakeImageStream_16(
          this,
          Invocation.method(
            #resolve,
            [configuration],
          ),
        ),
        returnValueForMissingStub: _FakeImageStream_16(
          this,
          Invocation.method(
            #resolve,
            [configuration],
          ),
        ),
      ) as _i11.ImageStream);

  @override
  _i11.ImageStream createStream(_i13.ImageConfiguration? configuration) =>
      (super.noSuchMethod(
        Invocation.method(
          #createStream,
          [configuration],
        ),
        returnValue: _FakeImageStream_16(
          this,
          Invocation.method(
            #createStream,
            [configuration],
          ),
        ),
        returnValueForMissingStub: _FakeImageStream_16(
          this,
          Invocation.method(
            #createStream,
            [configuration],
          ),
        ),
      ) as _i11.ImageStream);

  @override
  _i7.Future<_i25.ImageCacheStatus?> obtainCacheStatus({
    required _i13.ImageConfiguration? configuration,
    _i11.ImageErrorListener? handleError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #obtainCacheStatus,
          [],
          {
            #configuration: configuration,
            #handleError: handleError,
          },
        ),
        returnValue: _i7.Future<_i25.ImageCacheStatus?>.value(),
        returnValueForMissingStub: _i7.Future<_i25.ImageCacheStatus?>.value(),
      ) as _i7.Future<_i25.ImageCacheStatus?>);

  @override
  void resolveStreamForKey(
    _i13.ImageConfiguration? configuration,
    _i11.ImageStream? stream,
    _i13.NetworkImage? key,
    _i11.ImageErrorListener? handleError,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #resolveStreamForKey,
          [
            configuration,
            stream,
            key,
            handleError,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<bool> evict({
    _i25.ImageCache? cache,
    _i13.ImageConfiguration? configuration = _i13.ImageConfiguration.empty,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #evict,
          [],
          {
            #cache: cache,
            #configuration: configuration,
          },
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<_i13.NetworkImage> obtainKey(
          _i13.ImageConfiguration? configuration) =>
      (super.noSuchMethod(
        Invocation.method(
          #obtainKey,
          [configuration],
        ),
        returnValue: _i7.Future<_i13.NetworkImage>.value(_FakeNetworkImage_17(
          this,
          Invocation.method(
            #obtainKey,
            [configuration],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i13.NetworkImage>.value(_FakeNetworkImage_17(
          this,
          Invocation.method(
            #obtainKey,
            [configuration],
          ),
        )),
      ) as _i7.Future<_i13.NetworkImage>);
}
