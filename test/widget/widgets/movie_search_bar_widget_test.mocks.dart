// Mocks generated by Mockito 5.4.4 from annotations
// in dima_project/test/widget/widgets/movie_search_bar_widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dima_project/models/movie.dart' as _i2;
import 'package:dima_project/models/person.dart' as _i3;
import 'package:dima_project/services/tmdb_api_service.dart' as _i4;
import 'package:http/http.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMovie_0 extends _i1.SmartFake implements _i2.Movie {
  _FakeMovie_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePerson_1 extends _i1.SmartFake implements _i3.Person {
  _FakePerson_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TmdbApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTmdbApiService extends _i1.Mock implements _i4.TmdbApiService {
  @override
  _i5.Future<List<_i2.Movie>> fetchTrendingMovies([_i6.Client? client]) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchTrendingMovies,
          [client],
        ),
        returnValue: _i5.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
      ) as _i5.Future<List<_i2.Movie>>);

  @override
  _i5.Future<List<_i2.Movie>> fetchNowPlayingMovies() => (super.noSuchMethod(
        Invocation.method(
          #fetchNowPlayingMovies,
          [],
        ),
        returnValue: _i5.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
      ) as _i5.Future<List<_i2.Movie>>);

  @override
  _i5.Future<List<_i2.Movie>> fetchTopRatedMovies() => (super.noSuchMethod(
        Invocation.method(
          #fetchTopRatedMovies,
          [],
        ),
        returnValue: _i5.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
      ) as _i5.Future<List<_i2.Movie>>);

  @override
  _i5.Future<List<_i2.Movie>> fetchUpcomingMovies() => (super.noSuchMethod(
        Invocation.method(
          #fetchUpcomingMovies,
          [],
        ),
        returnValue: _i5.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
      ) as _i5.Future<List<_i2.Movie>>);

  @override
  _i5.Future<_i2.Movie> retrieveFilmInfo(int? movieId) => (super.noSuchMethod(
        Invocation.method(
          #retrieveFilmInfo,
          [movieId],
        ),
        returnValue: _i5.Future<_i2.Movie>.value(_FakeMovie_0(
          this,
          Invocation.method(
            #retrieveFilmInfo,
            [movieId],
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i2.Movie>.value(_FakeMovie_0(
          this,
          Invocation.method(
            #retrieveFilmInfo,
            [movieId],
          ),
        )),
      ) as _i5.Future<_i2.Movie>);

  @override
  _i5.Future<List<Map<String, dynamic>>> retrieveCast(int? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveCast,
          [movieId],
        ),
        returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
        returnValueForMissingStub: _i5.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<String> retrieveTrailer(int? movieId) => (super.noSuchMethod(
        Invocation.method(
          #retrieveTrailer,
          [movieId],
        ),
        returnValue: _i5.Future<String>.value(_i7.dummyValue<String>(
          this,
          Invocation.method(
            #retrieveTrailer,
            [movieId],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<String>.value(_i7.dummyValue<String>(
          this,
          Invocation.method(
            #retrieveTrailer,
            [movieId],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<List<_i2.Movie>> searchMovie(String? query) => (super.noSuchMethod(
        Invocation.method(
          #searchMovie,
          [query],
        ),
        returnValue: _i5.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
      ) as _i5.Future<List<_i2.Movie>>);

  @override
  _i5.Future<List<_i2.Movie>> fetchMoviesByReleaseDate(String? releaseDate) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMoviesByReleaseDate,
          [releaseDate],
        ),
        returnValue: _i5.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
      ) as _i5.Future<List<_i2.Movie>>);

  @override
  _i5.Future<Map<String, List<Map<String, dynamic>>>> fetchAllProviders(
          int? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAllProviders,
          [movieId],
        ),
        returnValue: _i5.Future<Map<String, List<Map<String, dynamic>>>>.value(
            <String, List<Map<String, dynamic>>>{}),
        returnValueForMissingStub:
            _i5.Future<Map<String, List<Map<String, dynamic>>>>.value(
                <String, List<Map<String, dynamic>>>{}),
      ) as _i5.Future<Map<String, List<Map<String, dynamic>>>>);

  @override
  _i5.Future<List<_i2.Movie>> fetchMoviesByGenres(List<int>? genreIds) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMoviesByGenres,
          [genreIds],
        ),
        returnValue: _i5.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
      ) as _i5.Future<List<_i2.Movie>>);

  @override
  _i5.Future<List<_i2.Movie>> fetchRecommendedMovies(int? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchRecommendedMovies,
          [movieId],
        ),
        returnValue: _i5.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
      ) as _i5.Future<List<_i2.Movie>>);

  @override
  _i5.Future<List<_i3.Person>> searchPeople(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchPeople,
          [query],
        ),
        returnValue: _i5.Future<List<_i3.Person>>.value(<_i3.Person>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i3.Person>>.value(<_i3.Person>[]),
      ) as _i5.Future<List<_i3.Person>>);

  @override
  _i5.Future<_i3.Person> fetchPersonDetails(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPersonDetails,
          [personId],
        ),
        returnValue: _i5.Future<_i3.Person>.value(_FakePerson_1(
          this,
          Invocation.method(
            #fetchPersonDetails,
            [personId],
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i3.Person>.value(_FakePerson_1(
          this,
          Invocation.method(
            #fetchPersonDetails,
            [personId],
          ),
        )),
      ) as _i5.Future<_i3.Person>);

  @override
  _i5.Future<List<_i2.Movie>> fetchPersonMovies(int? personId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPersonMovies,
          [personId],
        ),
        returnValue: _i5.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
      ) as _i5.Future<List<_i2.Movie>>);
}
